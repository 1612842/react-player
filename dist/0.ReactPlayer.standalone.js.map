{"version":3,"sources":["webpack://renderReactPlayer/./src/players/FilePlayer.js"],"names":["IOS","navigator","test","userAgent","window","MSStream","AUDIO_EXTENSIONS","VIDEO_EXTENSIONS","HLS_EXTENSIONS","DASH_EXTENSIONS","MATCH_DROPBOX_URL","canPlay","url","Array","item","src","isMediaStream","supportsWebKitPresentationMode","video","document","createElement","webkitSupportsPresentationMode","webkitSetPresentationMode","FilePlayer","props","onReady","onPlay","onBuffer","onBufferEnd","onPause","onEnded","onError","onEnablePIP","e","onDisablePIP","playing","play","player","webkitPresentationMode","onSeek","target","currentTime","muted","source","index","key","track","prevPlayer","Component","this","didMount","addListeners","load","prevProps","shouldUseAudio","removeListeners","playsinline","addEventListener","onPresentationModeChange","setAttribute","removeEventListener","config","file","forceVideo","attributes","poster","forceAudio","forceHLS","forceDASH","hlsVersion","dashVersion","shouldUseHLS","getSDK","replace","then","Hls","hls","hlsOptions","on","Events","ERROR","data","loadSource","attachMedia","shouldUseDASH","dashjs","dash","MediaPlayer","create","initialize","getDebug","setLogToBrowserConsole","srcObject","URL","createObjectURL","promise","pause","removeAttribute","destroy","reset","seconds","fraction","volume","requestPictureInPicture","pictureInPictureElement","exitPictureInPicture","rate","playbackRate","duration","seekable","Infinity","length","end","buffered","getDuration","useHLS","useDASH","loop","controls","width","height","Element","style","ref","getSource","preload","autoPlay","undefined","map","renderSourceElement","tracks","renderTrack","pictureInPictureEnabled"],"mappings":"6uCAIA,IAAMA,EAA2B,oBAAdC,WAA6B,mBAAmBC,KAAKD,UAAUE,aAAeC,OAAOC,SAClGC,EAAmB,qEACnBC,EAAmB,qCACnBC,EAAiB,kBAGjBC,EAAkB,iBAGlBC,EAAoB,wBAE1B,SAASC,EAASC,GAChB,GAAIA,aAAeC,MAAO,4BACxB,YAAmBD,EAAnB,+CAAwB,KAAbE,EAAa,QACtB,GAAoB,iBAATA,GAAqBH,EAAQG,GACtC,OAAO,EAET,GAAIH,EAAQG,EAAKC,KACf,OAAO,GANa,kFASxB,OAAO,EAET,QAAIC,YAAcJ,KAIhBN,EAAiBJ,KAAKU,IACtBL,EAAiBL,KAAKU,IACtBJ,EAAeN,KAAKU,IACpBH,EAAgBP,KAAKU,IAIzB,SAASK,EAAgCC,GAIvC,OAHYA,EAAPA,GAAeC,SAASC,cAAc,UAG9BC,gCAA6E,mBAApCH,EAAMI,4BAA6C,cAAcpB,KAAKD,UAAUE,W,IAOnHoB,E,0VA2DT,wBAAa,IAAKC,OAAMC,QAAX,qB,gBACd,wBAAa,IAAKD,OAAME,OAAX,qB,kBACX,wBAAa,IAAKF,OAAMG,SAAX,qB,qBACV,wBAAa,IAAKH,OAAMI,YAAX,qB,iBACjB,wBAAa,IAAKJ,OAAMK,QAAX,qB,iBACb,wBAAa,IAAKL,OAAMM,QAAX,qB,iBACb,wBAAa,IAAKN,OAAMO,QAAX,qB,qBACT,wBAAa,IAAKP,OAAMQ,YAAX,qB,sBAEZ,SAAAC,GAAK,MACgB,EAAKT,MAA/BU,EADU,EACVA,aAAcC,EADJ,EACIA,QACtBD,EAAaD,GACTE,GACF,EAAKC,S,kCAIkB,SAAAH,GACzB,GAAI,EAAKI,QAAUpB,EAA+B,EAAKoB,QAAS,KACtDC,EAA2B,EAAKD,OAAhCC,uBACuB,uBAA3BA,EACF,EAAKN,YAAYC,GACmB,WAA3BK,GACT,EAAKJ,aAAaD,M,gBAKf,SAAAA,GACP,EAAKT,MAAMe,OAAON,EAAEO,OAAOC,e,cAsFtB,WACL,EAAKJ,OAAOK,OAAQ,I,gBAGb,WACP,EAAKL,OAAOK,OAAQ,I,6BAiEA,SAACC,EAAQC,GAC7B,MAAsB,iBAAXD,EACF,4BAAQE,IAAKD,EAAO7B,IAAK4B,IAE3B,8BAAQE,IAAKD,GAAWD,M,qBAGnB,SAACG,EAAOF,GACpB,OAAO,6BAAOC,IAAKD,GAAWE,M,aAG1B,SAAAT,GACA,EAAKA,SAEP,EAAKU,WAAa,EAAKV,QAEzB,EAAKA,OAASA,I,8OApQsBW,gB,4FAMpCC,KAAKzB,MAAM0B,UAAYD,KAAKzB,MAAM0B,SAASD,MAC3CA,KAAKE,aAAaF,KAAKZ,QACnBrC,GACFiD,KAAKZ,OAAOe,S,yCAIIC,GACdJ,KAAKK,eAAeL,KAAKzB,SAAWyB,KAAKK,eAAeD,KAC1DJ,KAAKM,gBAAgBN,KAAKF,YAC1BE,KAAKE,aAAaF,KAAKZ,W,6CAKzBY,KAAKM,gBAAgBN,KAAKZ,U,mCAGdA,GAAQ,IACZmB,EAAgBP,KAAKzB,MAArBgC,YACRnB,EAAOoB,iBAAiB,UAAWR,KAAKxB,SACxCY,EAAOoB,iBAAiB,OAAQR,KAAKvB,QACrCW,EAAOoB,iBAAiB,UAAWR,KAAKtB,UACxCU,EAAOoB,iBAAiB,UAAWR,KAAKrB,aACxCS,EAAOoB,iBAAiB,QAASR,KAAKpB,SACtCQ,EAAOoB,iBAAiB,SAAUR,KAAKV,QACvCF,EAAOoB,iBAAiB,QAASR,KAAKnB,SACtCO,EAAOoB,iBAAiB,QAASR,KAAKlB,SACtCM,EAAOoB,iBAAiB,wBAAyBR,KAAKjB,aACtDK,EAAOoB,iBAAiB,wBAAyBR,KAAKf,cACtDG,EAAOoB,iBAAiB,gCAAiCR,KAAKS,0BAC1DF,IACFnB,EAAOsB,aAAa,cAAe,IACnCtB,EAAOsB,aAAa,qBAAsB,IAC1CtB,EAAOsB,aAAa,iBAAkB,O,sCAIzBtB,GACfA,EAAOuB,oBAAoB,UAAWX,KAAKxB,SAC3CY,EAAOuB,oBAAoB,OAAQX,KAAKvB,QACxCW,EAAOuB,oBAAoB,UAAWX,KAAKtB,UAC3CU,EAAOuB,oBAAoB,UAAWX,KAAKrB,aAC3CS,EAAOuB,oBAAoB,QAASX,KAAKpB,SACzCQ,EAAOuB,oBAAoB,SAAUX,KAAKV,QAC1CF,EAAOuB,oBAAoB,QAASX,KAAKnB,SACzCO,EAAOuB,oBAAoB,QAASX,KAAKlB,SACzCM,EAAOuB,oBAAoB,wBAAyBX,KAAKjB,aACzDK,EAAOuB,oBAAoB,wBAAyBX,KAAKf,cACzDG,EAAOuB,oBAAoB,gCAAiCX,KAAKS,4B,qCAoCnDlC,GACd,OAAIA,EAAMqC,OAAOC,KAAKC,cAGlBvC,EAAMqC,OAAOC,KAAKE,WAAWC,SAG1B3D,EAAiBJ,KAAKsB,EAAMZ,MAAQY,EAAMqC,OAAOC,KAAKI,e,mCAGjDtD,GACZ,OAAQJ,EAAeN,KAAKU,KAASZ,GAAQiD,KAAKzB,MAAMqC,OAAOC,KAAKK,W,oCAGvDvD,GACb,OAAOH,EAAgBP,KAAKU,IAAQqC,KAAKzB,MAAMqC,OAAOC,KAAKM,Y,2BAGvDxD,GAAK,aAC2BqC,KAAKzB,MAAMqC,OAAOC,KAA9CO,EADC,EACDA,WAAYC,EADX,EACWA,YAoBpB,GAnBIrB,KAAKsB,aAAa3D,IACpB4D,YAzJc,mEAyJKC,QAAQ,UAAWJ,GAxJzB,OAwJkDK,KAAK,SAAAC,GAClE,EAAKC,IAAM,IAAID,EAAI,EAAKnD,MAAMqC,OAAOC,KAAKe,YAC1C,EAAKD,IAAIE,GAAGH,EAAII,OAAOC,MAAO,SAAC/C,EAAGgD,GAChC,EAAKzD,MAAMO,QAAQE,EAAGgD,EAAM,EAAKL,IAAKD,KAExC,EAAKC,IAAIM,WAAWtE,GACpB,EAAKgE,IAAIO,YAAY,EAAK9C,UAG1BY,KAAKmC,cAAcxE,IACrB4D,YAhKe,wEAgKKC,QAAQ,UAAWH,GA/JzB,UA+JoDI,KAAK,SAAAW,GACrE,EAAKC,KAAOD,EAAOE,cAAcC,SACjC,EAAKF,KAAKG,WAAW,EAAKpD,OAAQzB,EAAK,EAAKY,MAAMW,SAClD,EAAKmD,KAAKR,GAAG,QAAS,EAAKtD,MAAMO,SACjC,EAAKuD,KAAKI,WAAWC,wBAAuB,KAI5C/E,aAAeC,MAKjBoC,KAAKZ,OAAOe,YACP,GAAIpC,YAAcJ,GACvB,IACEqC,KAAKZ,OAAOuD,UAAYhF,EACxB,MAAOqB,GACPgB,KAAKZ,OAAOtB,IAAMX,OAAOyF,IAAIC,gBAAgBlF,M,6BAMjD,IAAMmF,EAAU9C,KAAKZ,OAAOD,OACxB2D,GACFA,EAAO,MAAO9C,KAAKzB,MAAMO,W,8BAK3BkB,KAAKZ,OAAO2D,U,6BAIZ/C,KAAKZ,OAAO4D,gBAAgB,OACxBhD,KAAK2B,KACP3B,KAAK2B,IAAIsB,UAEPjD,KAAKqC,MACPrC,KAAKqC,KAAKa,U,6BAINC,GACNnD,KAAKZ,OAAOI,YAAc2D,I,gCAGjBC,GACTpD,KAAKZ,OAAOiE,OAASD,I,kCAYjBpD,KAAKZ,OAAOkE,yBAA2BpF,SAASqF,0BAA4BvD,KAAKZ,OACnFY,KAAKZ,OAAOkE,0BACHtF,EAA+BgC,KAAKZ,SAAkD,uBAAvCY,KAAKZ,OAAOC,wBACpEW,KAAKZ,OAAOf,0BAA0B,wB,mCAKpCH,SAASsF,sBAAwBtF,SAASqF,0BAA4BvD,KAAKZ,OAC7ElB,SAASsF,uBACAxF,EAA+BgC,KAAKZ,SAAkD,WAAvCY,KAAKZ,OAAOC,wBACpEW,KAAKZ,OAAOf,0BAA0B,Y,sCAIzBoF,GACfzD,KAAKZ,OAAOsE,aAAeD,I,oCAI3B,IAAKzD,KAAKZ,OAAQ,OAAO,KADZ,MAEkBY,KAAKZ,OAA5BuE,EAFK,EAELA,SAAUC,EAFL,EAEKA,SAGlB,OAAID,IAAaE,KAA8B,EAAlBD,EAASE,OAC7BF,EAASG,IAAIH,EAASE,OAAS,GAEjCH,I,uCAIP,OAAK3D,KAAKZ,OACHY,KAAKZ,OAAOI,YADM,O,yCAKzB,IAAKQ,KAAKZ,OAAQ,OAAO,KADP,IAEV4E,EAAahE,KAAKZ,OAAlB4E,SACR,GAAwB,IAApBA,EAASF,OACX,OAAO,EAET,IAAMC,EAAMC,EAASD,IAAIC,EAASF,OAAS,GACrCH,EAAW3D,KAAKiE,cACtB,OAAUN,EAANI,EACKJ,EAEFI,I,gCAGEpG,GACT,IAAMuG,EAASlE,KAAKsB,aAAa3D,GAC3BwG,EAAUnE,KAAKmC,cAAcxE,GACnC,KAAIA,aAAeC,OAASG,YAAcJ,IAAQuG,GAAUC,GAG5D,OAAI1G,EAAkBR,KAAKU,GAClBA,EAAI6D,QAAQ,kBAAmB,6BAEjC7D,I,+BAsBC,MAC+DqC,KAAKzB,MAApEZ,EADA,EACAA,IAAKuB,EADL,EACKA,QAASkF,EADd,EACcA,KAAMC,EADpB,EACoBA,SAAU5E,EAD9B,EAC8BA,MAAOmB,EADrC,EACqCA,OAAQ0D,EAD7C,EAC6CA,MAAOC,EADpD,EACoDA,OAEtDC,EADWxE,KAAKK,eAAeL,KAAKzB,OACf,QAAU,QAC/BkG,EAAQ,CACZH,MAAiB,SAAVA,EAAmBA,EAAQ,OAClCC,OAAmB,SAAXA,EAAoBA,EAAS,QAEvC,OACE,kBAACC,EAAD,GACEE,IAAK1E,KAAK0E,IACV5G,IAAKkC,KAAK2E,UAAUhH,GACpB8G,MAAOA,EACPG,QAAQ,OACRC,SAAU3F,QAAW4F,EACrBT,SAAUA,EACV5E,MAAOA,EACP2E,KAAMA,GACFxD,EAAOC,KAAKE,YAEfpD,aAAeC,OACdD,EAAIoH,IAAI/E,KAAKgF,qBACdpE,EAAOC,KAAKoE,OAAOF,IAAI/E,KAAKkF,kB,OA7RhB5G,E,cACE,c,EADFA,E,UAEFZ,G,EAFEY,E,eAJrB,SAAuBX,GACrB,OAAOD,EAAQC,OAAWO,SAASiH,yBAA2BnH,OAAsCX,EAAiBJ,KAAKU","file":"0.ReactPlayer.standalone.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { getSDK, isMediaStream } from '../utils'\n\nconst IOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\nconst AUDIO_EXTENSIONS = /\\.(m4a|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\\?)/i\nconst VIDEO_EXTENSIONS = /\\.(mp4|og[gv]|webm|mov|m4v)($|\\?)/i\nconst HLS_EXTENSIONS = /\\.(m3u8)($|\\?)/i\nconst HLS_SDK_URL = 'https://cdnjs.cloudflare.com/ajax/libs/hls.js/VERSION/hls.min.js'\nconst HLS_GLOBAL = 'Hls'\nconst DASH_EXTENSIONS = /\\.(mpd)($|\\?)/i\nconst DASH_SDK_URL = 'https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js'\nconst DASH_GLOBAL = 'dashjs'\nconst MATCH_DROPBOX_URL = /www\\.dropbox\\.com\\/.+/\n\nfunction canPlay (url) {\n  if (url instanceof Array) {\n    for (const item of url) {\n      if (typeof item === 'string' && canPlay(item)) {\n        return true\n      }\n      if (canPlay(item.src)) {\n        return true\n      }\n    }\n    return false\n  }\n  if (isMediaStream(url)) {\n    return true\n  }\n  return (\n    AUDIO_EXTENSIONS.test(url) ||\n    VIDEO_EXTENSIONS.test(url) ||\n    HLS_EXTENSIONS.test(url) ||\n    DASH_EXTENSIONS.test(url)\n  )\n}\n\nfunction supportsWebKitPresentationMode (video) {\n  if (!video) video = document.createElement('video')\n  // Check if Safari supports PiP, and is not on mobile (other than iPad)\n  // iPhone safari appears to \"support\" PiP through the check, however PiP does not function\n  return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function' && !/iPhone|iPod/.test(navigator.userAgent)\n}\n\nfunction canEnablePIP (url) {\n  return canPlay(url) && (!!document.pictureInPictureEnabled || supportsWebKitPresentationMode()) && !AUDIO_EXTENSIONS.test(url)\n}\n\nexport default class FilePlayer extends Component {\n  static displayName = 'FilePlayer'\n  static canPlay = canPlay\n  static canEnablePIP = canEnablePIP\n\n  componentDidMount () {\n    this.props.didMount && this.props.didMount(this)\n    this.addListeners(this.player)\n    if (IOS) {\n      this.player.load()\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {\n      this.removeListeners(this.prevPlayer)\n      this.addListeners(this.player)\n    }\n  }\n\n  componentWillUnmount () {\n    this.removeListeners(this.player)\n  }\n\n  addListeners (player) {\n    const { playsinline } = this.props\n    player.addEventListener('canplay', this.onReady)\n    player.addEventListener('play', this.onPlay)\n    player.addEventListener('waiting', this.onBuffer)\n    player.addEventListener('playing', this.onBufferEnd)\n    player.addEventListener('pause', this.onPause)\n    player.addEventListener('seeked', this.onSeek)\n    player.addEventListener('ended', this.onEnded)\n    player.addEventListener('error', this.onError)\n    player.addEventListener('enterpictureinpicture', this.onEnablePIP)\n    player.addEventListener('leavepictureinpicture', this.onDisablePIP)\n    player.addEventListener('webkitpresentationmodechanged', this.onPresentationModeChange)\n    if (playsinline) {\n      player.setAttribute('playsinline', '')\n      player.setAttribute('webkit-playsinline', '')\n      player.setAttribute('x5-playsinline', '')\n    }\n  }\n\n  removeListeners (player) {\n    player.removeEventListener('canplay', this.onReady)\n    player.removeEventListener('play', this.onPlay)\n    player.removeEventListener('waiting', this.onBuffer)\n    player.removeEventListener('playing', this.onBufferEnd)\n    player.removeEventListener('pause', this.onPause)\n    player.removeEventListener('seeked', this.onSeek)\n    player.removeEventListener('ended', this.onEnded)\n    player.removeEventListener('error', this.onError)\n    player.removeEventListener('enterpictureinpicture', this.onEnablePIP)\n    player.removeEventListener('leavepictureinpicture', this.onDisablePIP)\n    player.removeEventListener('webkitpresentationmodechanged', this.onPresentationModeChange)\n  }\n\n  // Proxy methods to prevent listener leaks\n  onReady = (...args) => this.props.onReady(...args)\n  onPlay = (...args) => this.props.onPlay(...args)\n  onBuffer = (...args) => this.props.onBuffer(...args)\n  onBufferEnd = (...args) => this.props.onBufferEnd(...args)\n  onPause = (...args) => this.props.onPause(...args)\n  onEnded = (...args) => this.props.onEnded(...args)\n  onError = (...args) => this.props.onError(...args)\n  onEnablePIP = (...args) => this.props.onEnablePIP(...args)\n\n  onDisablePIP = e => {\n    const { onDisablePIP, playing } = this.props\n    onDisablePIP(e)\n    if (playing) {\n      this.play()\n    }\n  }\n\n  onPresentationModeChange = e => {\n    if (this.player && supportsWebKitPresentationMode(this.player)) {\n      const { webkitPresentationMode } = this.player\n      if (webkitPresentationMode === 'picture-in-picture') {\n        this.onEnablePIP(e)\n      } else if (webkitPresentationMode === 'inline') {\n        this.onDisablePIP(e)\n      }\n    }\n  }\n\n  onSeek = e => {\n    this.props.onSeek(e.target.currentTime)\n  }\n\n  shouldUseAudio (props) {\n    if (props.config.file.forceVideo) {\n      return false\n    }\n    if (props.config.file.attributes.poster) {\n      return false // Use <video> so that poster is shown\n    }\n    return AUDIO_EXTENSIONS.test(props.url) || props.config.file.forceAudio\n  }\n\n  shouldUseHLS (url) {\n    return (HLS_EXTENSIONS.test(url) && !IOS) || this.props.config.file.forceHLS\n  }\n\n  shouldUseDASH (url) {\n    return DASH_EXTENSIONS.test(url) || this.props.config.file.forceDASH\n  }\n\n  load (url) {\n    const { hlsVersion, dashVersion } = this.props.config.file\n    if (this.shouldUseHLS(url)) {\n      getSDK(HLS_SDK_URL.replace('VERSION', hlsVersion), HLS_GLOBAL).then(Hls => {\n        this.hls = new Hls(this.props.config.file.hlsOptions)\n        this.hls.on(Hls.Events.ERROR, (e, data) => {\n          this.props.onError(e, data, this.hls, Hls)\n        })\n        this.hls.loadSource(url)\n        this.hls.attachMedia(this.player)\n      })\n    }\n    if (this.shouldUseDASH(url)) {\n      getSDK(DASH_SDK_URL.replace('VERSION', dashVersion), DASH_GLOBAL).then(dashjs => {\n        this.dash = dashjs.MediaPlayer().create()\n        this.dash.initialize(this.player, url, this.props.playing)\n        this.dash.on('error', this.props.onError)\n        this.dash.getDebug().setLogToBrowserConsole(false)\n      })\n    }\n\n    if (url instanceof Array) {\n      // When setting new urls (<source>) on an already loaded video,\n      // HTMLMediaElement.load() is needed to reset the media element\n      // and restart the media resource. Just replacing children source\n      // dom nodes is not enough\n      this.player.load()\n    } else if (isMediaStream(url)) {\n      try {\n        this.player.srcObject = url\n      } catch (e) {\n        this.player.src = window.URL.createObjectURL(url)\n      }\n    }\n  }\n\n  play () {\n    const promise = this.player.play()\n    if (promise) {\n      promise.catch(this.props.onError)\n    }\n  }\n\n  pause () {\n    this.player.pause()\n  }\n\n  stop () {\n    this.player.removeAttribute('src')\n    if (this.hls) {\n      this.hls.destroy()\n    }\n    if (this.dash) {\n      this.dash.reset()\n    }\n  }\n\n  seekTo (seconds) {\n    this.player.currentTime = seconds\n  }\n\n  setVolume (fraction) {\n    this.player.volume = fraction\n  }\n\n  mute = () => {\n    this.player.muted = true\n  }\n\n  unmute = () => {\n    this.player.muted = false\n  }\n\n  enablePIP () {\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\n      this.player.requestPictureInPicture()\n    } else if (supportsWebKitPresentationMode(this.player) && this.player.webkitPresentationMode !== 'picture-in-picture') {\n      this.player.webkitSetPresentationMode('picture-in-picture')\n    }\n  }\n\n  disablePIP () {\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\n      document.exitPictureInPicture()\n    } else if (supportsWebKitPresentationMode(this.player) && this.player.webkitPresentationMode !== 'inline') {\n      this.player.webkitSetPresentationMode('inline')\n    }\n  }\n\n  setPlaybackRate (rate) {\n    this.player.playbackRate = rate\n  }\n\n  getDuration () {\n    if (!this.player) return null\n    const { duration, seekable } = this.player\n    // on iOS, live streams return Infinity for the duration\n    // so instead we use the end of the seekable timerange\n    if (duration === Infinity && seekable.length > 0) {\n      return seekable.end(seekable.length - 1)\n    }\n    return duration\n  }\n\n  getCurrentTime () {\n    if (!this.player) return null\n    return this.player.currentTime\n  }\n\n  getSecondsLoaded () {\n    if (!this.player) return null\n    const { buffered } = this.player\n    if (buffered.length === 0) {\n      return 0\n    }\n    const end = buffered.end(buffered.length - 1)\n    const duration = this.getDuration()\n    if (end > duration) {\n      return duration\n    }\n    return end\n  }\n\n  getSource (url) {\n    const useHLS = this.shouldUseHLS(url)\n    const useDASH = this.shouldUseDASH(url)\n    if (url instanceof Array || isMediaStream(url) || useHLS || useDASH) {\n      return undefined\n    }\n    if (MATCH_DROPBOX_URL.test(url)) {\n      return url.replace('www.dropbox.com', 'dl.dropboxusercontent.com')\n    }\n    return url\n  }\n\n  renderSourceElement = (source, index) => {\n    if (typeof source === 'string') {\n      return <source key={index} src={source} />\n    }\n    return <source key={index} {...source} />\n  }\n\n  renderTrack = (track, index) => {\n    return <track key={index} {...track} />\n  }\n\n  ref = player => {\n    if (this.player) {\n      // Store previous player to be used by removeListeners()\n      this.prevPlayer = this.player\n    }\n    this.player = player\n  }\n\n  render () {\n    const { url, playing, loop, controls, muted, config, width, height } = this.props\n    const useAudio = this.shouldUseAudio(this.props)\n    const Element = useAudio ? 'audio' : 'video'\n    const style = {\n      width: width === 'auto' ? width : '100%',\n      height: height === 'auto' ? height : '100%'\n    }\n    return (\n      <Element\n        ref={this.ref}\n        src={this.getSource(url)}\n        style={style}\n        preload='auto'\n        autoPlay={playing || undefined}\n        controls={controls}\n        muted={muted}\n        loop={loop}\n        {...config.file.attributes}\n      >\n        {url instanceof Array &&\n          url.map(this.renderSourceElement)}\n        {config.file.tracks.map(this.renderTrack)}\n      </Element>\n    )\n  }\n}\n"],"sourceRoot":""}
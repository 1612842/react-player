{"version":3,"sources":["webpack://renderReactPlayer/./src/players/Facebook.js"],"names":["SDK_URL","SDK_GLOBAL_READY","MATCH_URL","Facebook","callPlayer","randomString","Component","this","props","didMount","url","isReady","getSDK","then","FB","XFBML","parse","init","appId","config","facebook","xfbml","version","Event","subscribe","msg","onLoaded","type","id","playerID","player","instance","onPlay","onPause","onEnded","onBuffer","onBufferEnd","onError","muted","onReady","document","getElementById","querySelector","style","visibility","seconds","fraction","width","height","className","data-href","data-autoplay","playing","data-allowfullscreen","data-controls","controls","test"],"mappings":"8hCAIA,IAAMA,EAAU,4CAEVC,EAAmB,cACnBC,EAAY,mDAGGC,E,6VAKNC,K,kBAPU,mBAQOC,e,cAiEvB,WACL,EAAKD,WAAW,U,gBAGT,WACP,EAAKA,WAAW,Y,8OA5EkBE,gB,4FASlCC,KAAKC,MAAMC,UAAYF,KAAKC,MAAMC,SAASF,Q,2BAGvCG,EAAKC,GAAS,WACdA,EACFC,YAAOZ,EAnBM,KAmBeC,GAAkBY,KAAK,SAAAC,GAAE,OAAIA,EAAGC,MAAMC,UAGpEJ,YAAOZ,EAtBQ,KAsBaC,GAAkBY,KAAK,SAAAC,GACjDA,EAAGG,KAAK,CACNC,MAAO,EAAKV,MAAMW,OAAOC,SAASF,MAClCG,OAAO,EACPC,QAAS,SAEXR,EAAGS,MAAMC,UAAU,eAAgB,SAAAC,GAGjC,EAAKjB,MAAMkB,aAEbZ,EAAGS,MAAMC,UAAU,cAAe,SAAAC,GACf,UAAbA,EAAIE,MAAoBF,EAAIG,KAAO,EAAKC,WAC1C,EAAKC,OAASL,EAAIM,SAClB,EAAKD,OAAON,UAAU,iBAAkB,EAAKhB,MAAMwB,QACnD,EAAKF,OAAON,UAAU,SAAU,EAAKhB,MAAMyB,SAC3C,EAAKH,OAAON,UAAU,kBAAmB,EAAKhB,MAAM0B,SACpD,EAAKJ,OAAON,UAAU,mBAAoB,EAAKhB,MAAM2B,UACrD,EAAKL,OAAON,UAAU,oBAAqB,EAAKhB,MAAM4B,aACtD,EAAKN,OAAON,UAAU,QAAS,EAAKhB,MAAM6B,SACrC,EAAK7B,MAAM8B,OAEd,EAAKlC,WAAW,UAElB,EAAKI,MAAM+B,UAIXC,SAASC,eAAe,EAAKZ,UAAUa,cAAc,UAAUC,MAAMC,WAAa,iB,6BAOxFrC,KAAKH,WAAW,U,8BAIhBG,KAAKH,WAAW,W,6DAOVyC,GACNtC,KAAKH,WAAW,OAAQyC,K,gCAGfC,GACTvC,KAAKH,WAAW,YAAa0C,K,oCAY7B,OAAOvC,KAAKH,WAAW,iB,uCAIvB,OAAOG,KAAKH,WAAW,wB,yCAIvB,OAAO,O,+BAQP,OACE,yBACEuC,MANU,CACZI,MAAO,OACPC,OAAQ,QAKNpB,GAAIrB,KAAKsB,SACToB,UAAU,WACVC,YAAW3C,KAAKC,MAAME,IACtByC,gBAAe5C,KAAKC,MAAM4C,QAAU,OAAS,QAC7CC,uBAAqB,OACrBC,gBAAe/C,KAAKC,MAAM+C,SAAW,OAAS,c,OAxGjCpD,E,cACE,Y,EADFA,E,UAEF,SAAAO,GAAG,OAAIR,EAAUsD,KAAK9C,K,EAFpBP,E,eAGE","file":"4.ReactPlayer.standalone.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK, randomString } from '../utils'\n\nconst SDK_URL = 'https://connect.facebook.net/en_US/sdk.js'\nconst SDK_GLOBAL = 'FB'\nconst SDK_GLOBAL_READY = 'fbAsyncInit'\nconst MATCH_URL = /facebook\\.com\\/([^/?].+\\/)?video(s|\\.php)[/?].*$/\nconst PLAYER_ID_PREFIX = 'facebook-player-'\n\nexport default class Facebook extends Component {\n  static displayName = 'Facebook'\n  static canPlay = url => MATCH_URL.test(url)\n  static loopOnEnded = true\n\n  callPlayer = callPlayer\n  playerID = PLAYER_ID_PREFIX + randomString()\n\n  componentDidMount () {\n    this.props.didMount && this.props.didMount(this)\n  }\n\n  load (url, isReady) {\n    if (isReady) {\n      getSDK(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(FB => FB.XFBML.parse())\n      return\n    }\n    getSDK(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(FB => {\n      FB.init({\n        appId: this.props.config.facebook.appId,\n        xfbml: true,\n        version: 'v2.5'\n      })\n      FB.Event.subscribe('xfbml.render', msg => {\n        // Here we know the SDK has loaded, even if onReady/onPlay\n        // is not called due to a video that cannot be embedded\n        this.props.onLoaded()\n      })\n      FB.Event.subscribe('xfbml.ready', msg => {\n        if (msg.type === 'video' && msg.id === this.playerID) {\n          this.player = msg.instance\n          this.player.subscribe('startedPlaying', this.props.onPlay)\n          this.player.subscribe('paused', this.props.onPause)\n          this.player.subscribe('finishedPlaying', this.props.onEnded)\n          this.player.subscribe('startedBuffering', this.props.onBuffer)\n          this.player.subscribe('finishedBuffering', this.props.onBufferEnd)\n          this.player.subscribe('error', this.props.onError)\n          if (!this.props.muted) {\n            // Player is muted by default\n            this.callPlayer('unmute')\n          }\n          this.props.onReady()\n\n          // For some reason Facebook have added `visibility: hidden`\n          // to the iframe when autoplay fails, so here we set it back\n          document.getElementById(this.playerID).querySelector('iframe').style.visibility = 'visible'\n        }\n      })\n    })\n  }\n\n  play () {\n    this.callPlayer('play')\n  }\n\n  pause () {\n    this.callPlayer('pause')\n  }\n\n  stop () {\n    // Nothing to do\n  }\n\n  seekTo (seconds) {\n    this.callPlayer('seek', seconds)\n  }\n\n  setVolume (fraction) {\n    this.callPlayer('setVolume', fraction)\n  }\n\n  mute = () => {\n    this.callPlayer('mute')\n  }\n\n  unmute = () => {\n    this.callPlayer('unmute')\n  }\n\n  getDuration () {\n    return this.callPlayer('getDuration')\n  }\n\n  getCurrentTime () {\n    return this.callPlayer('getCurrentPosition')\n  }\n\n  getSecondsLoaded () {\n    return null\n  }\n\n  render () {\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    return (\n      <div\n        style={style}\n        id={this.playerID}\n        className='fb-video'\n        data-href={this.props.url}\n        data-autoplay={this.props.playing ? 'true' : 'false'}\n        data-allowfullscreen='true'\n        data-controls={this.props.controls ? 'true' : 'false'}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}
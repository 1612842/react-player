{"version":3,"sources":["webpack://renderReactPlayer/./src/players/Vimeo.js"],"names":["MATCH_URL","MATCH_FILE_URL","Vimeo","callPlayer","setVolume","props","volume","container","Component","this","didMount","url","duration","getSDK","then","player","Player","autoplay","playing","muted","loop","playsinline","controls","config","vimeo","playerOptions","ready","iframe","querySelector","style","width","height","onError","on","onReady","refreshDuration","onPlay","onPause","e","onSeek","seconds","onEnded","currentTime","secondsLoaded","getDuration","promise","fraction","rate","overflow","display","key","ref","test"],"mappings":"0vCAIA,IAEMA,EAAY,iBACZC,EAAiB,mCAEFC,E,6VAUNC,K,kBACF,M,qBACG,M,uBACE,M,cAkFT,WACL,EAAKC,UAAU,K,gBAGR,WACmB,OAAtB,EAAKC,MAAMC,QACb,EAAKF,UAAU,EAAKC,MAAMC,U,aAgBxB,SAAAC,GACJ,EAAKA,UAAYA,I,8OAtHcC,gB,4FAgB/BC,KAAKJ,MAAMK,UAAYD,KAAKJ,MAAMK,SAASD,Q,2BAGvCE,GAAK,WACTF,KAAKG,SAAW,KAChBC,YA1BY,yCACG,SAyBaC,KAAK,SAAAZ,GAC1B,EAAKK,YACV,EAAKQ,OAAS,IAAIb,EAAMc,OAAO,EAAKT,U,2UAAtB,EACZI,MACAM,SAAU,EAAKZ,MAAMa,QACrBC,MAAO,EAAKd,MAAMc,MAClBC,KAAM,EAAKf,MAAMe,KACjBC,YAAa,EAAKhB,MAAMgB,YACxBC,SAAU,EAAKjB,MAAMiB,UAClB,EAAKjB,MAAMkB,OAAOC,MAAMC,gBAE7B,EAAKV,OAAOW,QAAQZ,KAAK,WACvB,IAAMa,EAAS,EAAKpB,UAAUqB,cAAc,UAC5CD,EAAOE,MAAMC,MAAQ,OACrBH,EAAOE,MAAME,OAAS,SAHxB,MAIS,EAAK1B,MAAM2B,SACpB,EAAKjB,OAAOkB,GAAG,SAAU,WACvB,EAAK5B,MAAM6B,UACX,EAAKC,oBAEP,EAAKpB,OAAOkB,GAAG,OAAQ,WACrB,EAAK5B,MAAM+B,SACX,EAAKD,oBAEP,EAAKpB,OAAOkB,GAAG,QAAS,EAAK5B,MAAMgC,SACnC,EAAKtB,OAAOkB,GAAG,SAAU,SAAAK,GAAC,OAAI,EAAKjC,MAAMkC,OAAOD,EAAEE,WAClD,EAAKzB,OAAOkB,GAAG,QAAS,EAAK5B,MAAMoC,SACnC,EAAK1B,OAAOkB,GAAG,QAAS,EAAK5B,MAAM2B,SACnC,EAAKjB,OAAOkB,GAAG,aAAc,YAAiB,IAAdO,EAAc,EAAdA,QAC9B,EAAKE,YAAcF,IAErB,EAAKzB,OAAOkB,GAAG,WAAY,YAAiB,IAAdO,EAAc,EAAdA,QAC5B,EAAKG,cAAgBH,MAEtB/B,KAAKJ,MAAM2B,W,wCAGG,WACjBvB,KAAKM,OAAO6B,cAAc9B,KAAK,SAAAF,GAC7B,EAAKA,SAAWA,M,6BAKlB,IAAMiC,EAAUpC,KAAKN,WAAW,QAC5B0C,GACFA,EAAO,MAAOpC,KAAKJ,MAAM2B,W,8BAK3BvB,KAAKN,WAAW,W,6BAIhBM,KAAKN,WAAW,Y,6BAGVqC,GACN/B,KAAKN,WAAW,iBAAkBqC,K,gCAGzBM,GACTrC,KAAKN,WAAW,YAAa2C,K,8BAGtB1B,GACPX,KAAKN,WAAW,UAAWiB,K,sCAGZ2B,GACftC,KAAKN,WAAW,kBAAmB4C,K,oCAcnC,OAAOtC,KAAKG,W,uCAIZ,OAAOH,KAAKiC,c,yCAIZ,OAAOjC,KAAKkC,gB,+BAOJ,IAEFd,EAAQ,CACZC,MAAO,OACPC,OAAQ,OACRiB,SAAU,SACVC,QALkBxC,KAAKJ,MAAjB4C,SAOR,OACE,yBACEC,IAAKzC,KAAKJ,MAAMM,IAChBwC,IAAK1C,KAAK0C,IACVtB,MAAOA,Q,OArIM3B,E,cACE,S,EADFA,E,aAEA,G,EAFAA,E,UAGF,SAAAS,GACf,OAAIV,EAAemD,KAAKzC,IAGjBX,EAAUoD,KAAKzC","file":"9.ReactPlayer.standalone.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK } from '../utils'\n\nconst SDK_URL = 'https://player.vimeo.com/api/player.js'\nconst SDK_GLOBAL = 'Vimeo'\nconst MATCH_URL = /vimeo\\.com\\/.+/\nconst MATCH_FILE_URL = /vimeo\\.com\\/external\\/[0-9]+\\..+/\n\nexport default class Vimeo extends Component {\n  static displayName = 'Vimeo'\n  static forceLoad = true // Prevent checking isLoading when URL changes\n  static canPlay = url => {\n    if (MATCH_FILE_URL.test(url)) {\n      return false\n    }\n    return MATCH_URL.test(url)\n  }\n\n  callPlayer = callPlayer\n  duration = null\n  currentTime = null\n  secondsLoaded = null\n\n  componentDidMount () {\n    this.props.didMount && this.props.didMount(this)\n  }\n\n  load (url) {\n    this.duration = null\n    getSDK(SDK_URL, SDK_GLOBAL).then(Vimeo => {\n      if (!this.container) return\n      this.player = new Vimeo.Player(this.container, {\n        url,\n        autoplay: this.props.playing,\n        muted: this.props.muted,\n        loop: this.props.loop,\n        playsinline: this.props.playsinline,\n        controls: this.props.controls,\n        ...this.props.config.vimeo.playerOptions\n      })\n      this.player.ready().then(() => {\n        const iframe = this.container.querySelector('iframe')\n        iframe.style.width = '100%'\n        iframe.style.height = '100%'\n      }).catch(this.props.onError)\n      this.player.on('loaded', () => {\n        this.props.onReady()\n        this.refreshDuration()\n      })\n      this.player.on('play', () => {\n        this.props.onPlay()\n        this.refreshDuration()\n      })\n      this.player.on('pause', this.props.onPause)\n      this.player.on('seeked', e => this.props.onSeek(e.seconds))\n      this.player.on('ended', this.props.onEnded)\n      this.player.on('error', this.props.onError)\n      this.player.on('timeupdate', ({ seconds }) => {\n        this.currentTime = seconds\n      })\n      this.player.on('progress', ({ seconds }) => {\n        this.secondsLoaded = seconds\n      })\n    }, this.props.onError)\n  }\n\n  refreshDuration () {\n    this.player.getDuration().then(duration => {\n      this.duration = duration\n    })\n  }\n\n  play () {\n    const promise = this.callPlayer('play')\n    if (promise) {\n      promise.catch(this.props.onError)\n    }\n  }\n\n  pause () {\n    this.callPlayer('pause')\n  }\n\n  stop () {\n    this.callPlayer('unload')\n  }\n\n  seekTo (seconds) {\n    this.callPlayer('setCurrentTime', seconds)\n  }\n\n  setVolume (fraction) {\n    this.callPlayer('setVolume', fraction)\n  }\n\n  setLoop (loop) {\n    this.callPlayer('setLoop', loop)\n  }\n\n  setPlaybackRate (rate) {\n    this.callPlayer('setPlaybackRate', rate)\n  }\n\n  mute = () => {\n    this.setVolume(0)\n  }\n\n  unmute = () => {\n    if (this.props.volume !== null) {\n      this.setVolume(this.props.volume)\n    }\n  }\n\n  getDuration () {\n    return this.duration\n  }\n\n  getCurrentTime () {\n    return this.currentTime\n  }\n\n  getSecondsLoaded () {\n    return this.secondsLoaded\n  }\n\n  ref = container => {\n    this.container = container\n  }\n\n  render () {\n    const { display } = this.props\n    const style = {\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      display\n    }\n    return (\n      <div\n        key={this.props.url}\n        ref={this.ref}\n        style={style}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}
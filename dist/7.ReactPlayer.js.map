{"version":3,"sources":["webpack://ReactPlayer/./src/players/Streamable.js"],"names":["MATCH_URL","Streamable","callPlayer","iframe","Component","this","props","didMount","url","getSDK","then","playerjs","player","Player","setLoop","loop","on","onReady","onPlay","onPause","onSeek","onEnded","onError","duration","seconds","currentTime","percent","secondsLoaded","muted","mute","fraction","id","match","ref","src","frameBorder","scrolling","style","width","height","allowFullScreen","test"],"mappings":"khCAIA,IAEMA,EAAY,gCAEGC,E,6VAINC,K,kBACF,M,qBACG,M,uBACE,M,cAwDT,WACL,EAAKA,WAAW,U,gBAGT,WACP,EAAKA,WAAW,Y,aAeZ,SAAAC,GACJ,EAAKA,OAASA,I,8OApFsBC,gB,4FAUpCC,KAAKC,MAAMC,UAAYF,KAAKC,MAAMC,SAASF,Q,2BAGvCG,GAAK,WACTC,YAlBY,2CACG,YAiBaC,KAAK,SAAAC,GAC1B,EAAKR,SACV,EAAKS,OAAS,IAAID,EAASE,OAAO,EAAKV,QACvC,EAAKS,OAAOE,QAAQ,EAAKR,MAAMS,MAC/B,EAAKH,OAAOI,GAAG,QAAS,EAAKV,MAAMW,SACnC,EAAKL,OAAOI,GAAG,OAAQ,EAAKV,MAAMY,QAClC,EAAKN,OAAOI,GAAG,QAAS,EAAKV,MAAMa,SACnC,EAAKP,OAAOI,GAAG,SAAU,EAAKV,MAAMc,QACpC,EAAKR,OAAOI,GAAG,QAAS,EAAKV,MAAMe,SACnC,EAAKT,OAAOI,GAAG,QAAS,EAAKV,MAAMgB,SACnC,EAAKV,OAAOI,GAAG,aAAc,YAA2B,IAAxBO,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACxC,EAAKD,SAAWA,EAChB,EAAKE,YAAcD,IAErB,EAAKZ,OAAOI,GAAG,WAAY,YAAiB,IAAdU,EAAc,EAAdA,QACxB,EAAKH,WACP,EAAKI,cAAgB,EAAKJ,SAAWG,KAGrC,EAAKpB,MAAMsB,OACb,EAAKhB,OAAOiB,SAEbxB,KAAKC,MAAMgB,W,6BAIdjB,KAAKH,WAAW,U,8BAIhBG,KAAKH,WAAW,W,6DAOVsB,GACNnB,KAAKH,WAAW,iBAAkBsB,K,gCAGzBM,GACTzB,KAAKH,WAAW,YAAwB,IAAX4B,K,8BAGtBf,GACPV,KAAKH,WAAW,UAAWa,K,oCAY3B,OAAOV,KAAKkB,W,uCAIZ,OAAOlB,KAAKoB,c,yCAIZ,OAAOpB,KAAKsB,gB,+BAQZ,IAAMI,EAAK1B,KAAKC,MAAME,IAAIwB,MAAMhC,GAAW,GAK3C,OACE,4BACEiC,IAAK5B,KAAK4B,IACVC,IAAG,mCAA8BH,GACjCI,YAAY,IACZC,UAAU,KACVC,MAVU,CACZC,MAAO,OACPC,OAAQ,QASNC,iBAAe,Q,OApGFvC,E,cACE,c,EADFA,E,UAEF,SAAAO,GAAG,OAAIR,EAAUyC,KAAKjC","file":"7.ReactPlayer.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK } from '../utils'\n\nconst SDK_URL = 'https://cdn.embed.ly/player-0.1.0.min.js'\nconst SDK_GLOBAL = 'playerjs'\nconst MATCH_URL = /streamable\\.com\\/([a-z0-9]+)$/\n\nexport default class Streamable extends Component {\n  static displayName = 'Streamable'\n  static canPlay = url => MATCH_URL.test(url)\n\n  callPlayer = callPlayer\n  duration = null\n  currentTime = null\n  secondsLoaded = null\n\n  componentDidMount () {\n    this.props.didMount && this.props.didMount(this)\n  }\n\n  load (url) {\n    getSDK(SDK_URL, SDK_GLOBAL).then(playerjs => {\n      if (!this.iframe) return\n      this.player = new playerjs.Player(this.iframe)\n      this.player.setLoop(this.props.loop)\n      this.player.on('ready', this.props.onReady)\n      this.player.on('play', this.props.onPlay)\n      this.player.on('pause', this.props.onPause)\n      this.player.on('seeked', this.props.onSeek)\n      this.player.on('ended', this.props.onEnded)\n      this.player.on('error', this.props.onError)\n      this.player.on('timeupdate', ({ duration, seconds }) => {\n        this.duration = duration\n        this.currentTime = seconds\n      })\n      this.player.on('buffered', ({ percent }) => {\n        if (this.duration) {\n          this.secondsLoaded = this.duration * percent\n        }\n      })\n      if (this.props.muted) {\n        this.player.mute()\n      }\n    }, this.props.onError)\n  }\n\n  play () {\n    this.callPlayer('play')\n  }\n\n  pause () {\n    this.callPlayer('pause')\n  }\n\n  stop () {\n    // Nothing to do\n  }\n\n  seekTo (seconds) {\n    this.callPlayer('setCurrentTime', seconds)\n  }\n\n  setVolume (fraction) {\n    this.callPlayer('setVolume', fraction * 100)\n  }\n\n  setLoop (loop) {\n    this.callPlayer('setLoop', loop)\n  }\n\n  mute = () => {\n    this.callPlayer('mute')\n  }\n\n  unmute = () => {\n    this.callPlayer('unmute')\n  }\n\n  getDuration () {\n    return this.duration\n  }\n\n  getCurrentTime () {\n    return this.currentTime\n  }\n\n  getSecondsLoaded () {\n    return this.secondsLoaded\n  }\n\n  ref = iframe => {\n    this.iframe = iframe\n  }\n\n  render () {\n    const id = this.props.url.match(MATCH_URL)[1]\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    return (\n      <iframe\n        ref={this.ref}\n        src={`https://streamable.com/o/${id}`}\n        frameBorder='0'\n        scrolling='no'\n        style={style}\n        allowFullScreen\n      />\n    )\n  }\n}\n"],"sourceRoot":""}
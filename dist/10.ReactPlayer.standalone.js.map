{"version":3,"sources":["webpack://renderReactPlayer/./src/players/Wistia.js"],"names":["MATCH_URL","Wistia","callPlayer","Component","this","props","didMount","url","match","playing","muted","controls","onReady","onPlay","onPause","onSeek","onEnded","config","onError","getSDK","then","window","_wq","push","id","getID","options","autoPlay","silentAutoPlay","controlsVisibleOnLoad","wistia","player","unbind","bind","seconds","fraction","rate","className","key","style","width","height","test"],"mappings":"2vCAIA,IAEMA,EAAY,kDAEGC,E,6VAKNC,K,cAiEN,WACL,EAAKA,WAAW,U,gBAGT,WACP,EAAKA,WAAW,Y,8OA3EgBC,gB,4FAQhCC,KAAKC,MAAMC,UAAYF,KAAKC,MAAMC,SAASF,Q,4BAGtCG,GACL,OAAOA,GAAOA,EAAIC,MAAMR,GAAW,K,2BAG/BO,GAAK,aACwFH,KAAKC,MAA9FI,EADC,EACDA,QAASC,EADR,EACQA,MAAOC,EADf,EACeA,SAAUC,EADzB,EACyBA,QAASC,EADlC,EACkCA,OAAQC,EAD1C,EAC0CA,QAASC,EADnD,EACmDA,OAAQC,EAD3D,EAC2DA,QAASC,EADpE,EACoEA,OAAQC,EAD5E,EAC4EA,QACrFC,YArBY,kDACG,UAoBaC,KAAK,WAC/BC,OAAOC,IAAMD,OAAOC,KAAO,GAC3BD,OAAOC,IAAIC,KAAK,CACdC,GAAI,EAAKC,MAAMlB,GACfmB,Q,2UAAS,CAAF,CACLC,SAAUlB,EACVmB,eAAgB,QAChBlB,MAAOA,EACPmB,sBAAuBlB,GACpBM,EAAOa,OAAOJ,SAEnBd,QAAS,SAAAmB,GACP,EAAKA,OAASA,EACd,EAAKC,SACL,EAAKD,OAAOE,KAAK,OAAQpB,GACzB,EAAKkB,OAAOE,KAAK,QAASnB,GAC1B,EAAKiB,OAAOE,KAAK,OAAQlB,GACzB,EAAKgB,OAAOE,KAAK,MAAOjB,GACxBJ,QAGHM,K,6BAIHd,KAAKF,WAAW,U,8BAIhBE,KAAKF,WAAW,W,+BAGR,MACqCE,KAAKC,MAA1CQ,EADA,EACAA,OAAQC,EADR,EACQA,QAASC,EADjB,EACiBA,OAAQC,EADzB,EACyBA,QACjCZ,KAAK2B,OAAOC,OAAO,OAAQnB,GAC3BT,KAAK2B,OAAOC,OAAO,QAASlB,GAC5BV,KAAK2B,OAAOC,OAAO,OAAQjB,GAC3BX,KAAK2B,OAAOC,OAAO,MAAOhB,K,6BAI1BZ,KAAK4B,SACL5B,KAAKF,WAAW,Y,6BAGVgC,GACN9B,KAAKF,WAAW,OAAQgC,K,gCAGfC,GACT/B,KAAKF,WAAW,SAAUiC,K,sCAWXC,GACfhC,KAAKF,WAAW,eAAgBkC,K,oCAIhC,OAAOhC,KAAKF,WAAW,c,uCAIvB,OAAOE,KAAKF,WAAW,U,yCAIvB,OAAO,O,+BAIP,IAAMsB,EAAKpB,KAAKqB,MAAMrB,KAAKC,MAAME,KAC3B8B,EAAY,6BAAH,OAAgCb,GAK/C,OACE,yBAAKc,IAAKd,EAAIa,UAAWA,EAAWE,MALxB,CACZC,MAAO,OACPC,OAAQ,c,OAnGOxC,E,cACE,U,EADFA,E,UAEF,SAAAM,GAAG,OAAIP,EAAU0C,KAAKnC,K,EAFpBN,E,eAGE","file":"10.ReactPlayer.standalone.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK } from '../utils'\n\nconst SDK_URL = 'https://fast.wistia.com/assets/external/E-v1.js'\nconst SDK_GLOBAL = 'Wistia'\nconst MATCH_URL = /(?:wistia\\.com|wi\\.st)\\/(?:medias|embed)\\/(.*)$/\n\nexport default class Wistia extends Component {\n  static displayName = 'Wistia'\n  static canPlay = url => MATCH_URL.test(url)\n  static loopOnEnded = true\n\n  callPlayer = callPlayer\n\n  componentDidMount () {\n    this.props.didMount && this.props.didMount(this)\n  }\n\n  getID (url) {\n    return url && url.match(MATCH_URL)[1]\n  }\n\n  load (url) {\n    const { playing, muted, controls, onReady, onPlay, onPause, onSeek, onEnded, config, onError } = this.props\n    getSDK(SDK_URL, SDK_GLOBAL).then(() => {\n      window._wq = window._wq || []\n      window._wq.push({\n        id: this.getID(url),\n        options: {\n          autoPlay: playing,\n          silentAutoPlay: 'allow',\n          muted: muted,\n          controlsVisibleOnLoad: controls,\n          ...config.wistia.options\n        },\n        onReady: player => {\n          this.player = player\n          this.unbind()\n          this.player.bind('play', onPlay)\n          this.player.bind('pause', onPause)\n          this.player.bind('seek', onSeek)\n          this.player.bind('end', onEnded)\n          onReady()\n        }\n      })\n    }, onError)\n  }\n\n  play () {\n    this.callPlayer('play')\n  }\n\n  pause () {\n    this.callPlayer('pause')\n  }\n\n  unbind () {\n    const { onPlay, onPause, onSeek, onEnded } = this.props\n    this.player.unbind('play', onPlay)\n    this.player.unbind('pause', onPause)\n    this.player.unbind('seek', onSeek)\n    this.player.unbind('end', onEnded)\n  }\n\n  stop () {\n    this.unbind()\n    this.callPlayer('remove')\n  }\n\n  seekTo (seconds) {\n    this.callPlayer('time', seconds)\n  }\n\n  setVolume (fraction) {\n    this.callPlayer('volume', fraction)\n  }\n\n  mute = () => {\n    this.callPlayer('mute')\n  }\n\n  unmute = () => {\n    this.callPlayer('unmute')\n  }\n\n  setPlaybackRate (rate) {\n    this.callPlayer('playbackRate', rate)\n  }\n\n  getDuration () {\n    return this.callPlayer('duration')\n  }\n\n  getCurrentTime () {\n    return this.callPlayer('time')\n  }\n\n  getSecondsLoaded () {\n    return null\n  }\n\n  render () {\n    const id = this.getID(this.props.url)\n    const className = `wistia_embed wistia_async_${id}`\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    return (\n      <div key={id} className={className} style={style} />\n    )\n  }\n}\n"],"sourceRoot":""}